{
  "permissions": {
    "allow": [
      "Bash(npm run check:*)",
      "Bash(npx tsc:*)",
      "Bash(curl:*)",
      "Bash(python3:*)",
      "Bash(npm run check:server:*)",
      "Bash(node /tmp/count_trades.js:*)",
      "Bash(node /tmp/check_hype_positions.js:*)",
      "Bash(node /tmp/check_db_duplicates.js:*)",
      "Bash(timeout 30 node:*)",
      "Bash(node /tmp/debug_grouping.js:*)",
      "Bash(node /tmp/debug_hype_grouping.js:*)",
      "Bash(/dev/null)",
      "Bash(pkill:*)",
      "Bash(psql:*)",
      "Bash(node -e:*)",
      "Read(//tmp/**)",
      "Bash(cat:*)",
      "Bash(journalctl:*)",
      "Bash(dmesg:*)",
      "Bash(echo:*)",
      "Read(//proc/2608/fd/**)",
      "Bash(for i in {1..10})",
      "Bash(do sleep 2)",
      "Bash(if curl -s -f http://localhost:5000/api/strategies)",
      "Bash(then echo \"Server is back up after $ix2 seconds\")",
      "Bash(break)",
      "Bash(fi)",
      "Bash(done)",
      "Bash(node --check:*)",
      "Bash(git checkout:*)",
      "Bash(do if curl -s -f http://localhost:5000/api/strategies)",
      "Bash(then echo \"✅ Server is back online\")",
      "Bash(for i in {1..6})",
      "Bash(do sleep 5)",
      "Bash(node:*)",
      "Bash(timeout 5 curl:*)",
      "Bash(for i in {1..15})",
      "Bash(then echo \"✅ Server is back online after $ix2 seconds\")",
      "Bash(timeout 5 npm run check:server:*)",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:raw.githubusercontent.com)",
      "Bash(bash:*)",
      "Bash(then echo \"✅ Server is online\")",
      "Bash(else echo \"Waiting... ($i/10)\")",
      "Bash(timeout 30 curl:*)",
      "Bash(timeout 10 npx tsc:*)",
      "Bash(lsof:*)",
      "Bash(xargs:*)",
      "Bash(if lsof -ti:5000)",
      "Bash(then echo \"❌ Port 5000 still in use\")",
      "Bash(else echo \"✅ Port 5000 is free - you can start the dev server now\")",
      "Bash(tsx:*)",
      "Bash(awk:*)",
      "Bash(ss:*)",
      "Bash(netstat:*)",
      "Bash(npm run dev:*)",
      "Bash(then echo \"✅ Server is ready\")",
      "Bash(else echo \"⏳ Waiting for server... ($i/10)\")",
      "Bash(kill:*)",
      "Bash(do if timeout 5 curl -s -f http://localhost:5000/api/strategies)",
      "Bash(then echo \"✅ Server is online and responding\")",
      "Bash(else echo \"⏳ Waiting for server... ($i/15)\")",
      "Bash(timeout 30 npx tsc:*)",
      "Bash(tee:*)",
      "Bash(if timeout 5 curl -s -f http://localhost:5000/api/strategies)",
      "Bash(for i in {1..20})",
      "Bash(else echo \"⏳ Waiting... ($i/20)\")",
      "Bash(then echo \"✅ Server ready\")",
      "Bash(else echo \"⏳ Waiting ($i/15)...\")",
      "Bash(then echo \"✅ Ready\")",
      "Bash(else echo \"⏳ ($i/15)\")",
      "Bash(timeout 30 npm run dev:*)",
      "Bash(then echo \"Ready\")",
      "Bash(else echo \"Wait $i\")",
      "Bash(timeout 10 npm run check:*)",
      "Bash(timeout 30 npm run check:*)",
      "Bash(then echo \"✅ Server ready after restart\")",
      "Bash(else echo \"⏳ Waiting ($i/10)...\")",
      "Bash(timeout 10 curl:*)",
      "Bash(timeout 60 curl:*)",
      "Bash(npm install:*)",
      "Bash(if timeout 5 curl -s -f http://localhost:5000/api/performance/chart)",
      "Bash(do sleep 3)",
      "Bash(if timeout 2 curl -s http://localhost:5000/api/performance/chart)",
      "Bash(else echo \"⏳ Waiting for server ($i/20)...\")",
      "Bash(if timeout 2 curl -s http://localhost:5000/api/strategies)",
      "Bash(then echo \"✅ Server is back online after restart\")",
      "Bash(else echo \"⏳ Waiting for server ($i/15)...\")",
      "Bash(then echo \"✅ Server restarted\")",
      "Bash(timeout 15 curl:*)",
      "Bash(else echo \"⏳ ($i/10)\")",
      "Bash(timeout 20 curl:*)",
      "Bash(npm run restart:*)",
      "Bash(then echo \"✅ Server restarted and ready\")",
      "Bash(else echo \"⏳ Waiting ($i/20)...\")",
      "Bash(then echo \"✅ Server ready and cache cleared\")",
      "Bash(else echo \"⏳ ($i/20)\")",
      "Bash(then echo \"✅ Server ready with console logging\")",
      "Bash(else echo \"⏳ Waiting ($i/10)\")",
      "Bash(do sleep 1)",
      "Bash(do if timeout 2 curl -s http://localhost:5000/api/strategies)",
      "Bash(then echo \"⏳ Waiting ($i/10)\")",
      "Bash(else echo \"✅ Port 5000 is free\")",
      "Bash(timeout 2 curl:*)",
      "Bash(then echo \"⏳ Waiting ($i/15)...\")",
      "Bash(else echo \"✅ Port 5000 is free - ready to restart\")",
      "Bash(else echo \"⏳ Waiting for server... ($i/20)\")",
      "WebSearch",
      "Bash(chmod:*)",
      "Bash(timeout 10 npm run check:server:*)",
      "Bash(else echo \"⏳ Waiting for server ($i/10)...\")",
      "Bash(timeout 65 bash:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(then echo \"✅ Server is back online with fix applied\")",
      "Bash(git log:*)",
      "Bash(jq:*)",
      "Bash(timeout 15 npx tsc:*)",
      "Bash(else echo \"⏳ Waiting ($i/15)\")",
      "Bash(for sym in \"HYPEUSDT-SHORT\" \"XRPUSDT-SHORT\" \"PUMPUSDT-LONG\" \"AVNTUSDT-LONG\" \"HEMIUSDT-LONG\")",
      "Bash(do)",
      "Bash(for sym in \"ASTERUSDT-SHORT\" \"HYPEUSDT-SHORT\" \"XRPUSDT-SHORT\")",
      "Bash(do echo -n \"$sym: \")",
      "Bash(for sym in \"COAIUSDT-LONG\" \"FARTCOINUSDT-LONG\" \"PUMPUSDT-LONG\" \"AVNTUSDT-LONG\" \"HEMIUSDT-LONG\")",
      "Bash(for sym in \"ASTERUSDT-SHORT\" \"HYPEUSDT-SHORT\" \"XRPUSDT-SHORT\" \"ETHUSDT-SHORT\" \"BTCUSDT-SHORT\")",
      "Bash(do echo \"$sym:\")",
      "Bash(for sym in \"COAIUSDT-LONG\" \"FARTCOINUSDT-LONG\" \"PUMPUSDT-LONG\" \"AVNTUSDT-LONG\" \"HEMIUSDT-LONG\" \"ETHUSDT-LONG\" \"BTCUSDT-LONG\")",
      "Bash(timeout 30 npm run check:server:*)",
      "Bash(for:*)",
      "Bash(else echo \"⏳ ($i/5)\")",
      "Bash(then echo \"✅ Server is online and ready\")",
      "Bash(timeout 2 journalctl:*)",
      "Bash(then echo \"Port still in use\")",
      "Read(///**)",
      "Read(//dev/**)",
      "Bash(do if timeout 2 curl -s -f http://localhost:5000/api/strategies)",
      "Bash(else echo \"⏳ Waiting for server ($i/10)\")",
      "Bash(then echo \"✅ Server ready after $i attempts\")",
      "Bash(else echo \"⏳ Waiting ($i/5)\")",
      "Bash(then echo \"Server is running\")",
      "Bash(else echo \"Server is not responding\")",
      "Bash(if timeout 2 curl -s -f http://localhost:5000/api/strategies)",
      "Bash(then)",
      "Bash(else)",
      "Bash(NEON_DATABASE_URL=\"$NEON_DATABASE_URL\" node:*)",
      "Bash(npx tsx:*)",
      "Bash(then echo \"✅ Server ready after $i seconds\")",
      "Bash(/tmp/strategies.json)",
      "Bash(else echo \"⏳ Server not responding ($i/5)\")",
      "Bash(time timeout 5 curl:*)",
      "Bash(then echo \"✅ Server is ready after restart\")",
      "Bash(do echo -n \"$endpoint: \")",
      "Bash(timeout 3 curl:*)",
      "Bash(then echo \"✅ Server is ready and online\")",
      "Bash(then echo \"✅ Server is ready - changes reverted\")",
      "Bash(then echo \"✅ Replit dev server is ready and online\")",
      "Bash(then echo 'Port 5000 still in use, killing...')",
      "Bash(then echo \"✅ Server is online and ready after $i seconds\")",
      "Bash(timeout 10 node:*)",
      "Bash(then echo \"✅ Server ready with all rate limiting fixes\")",
      "Bash(then echo \"✅ Server ready - all rate limiting fixed\")",
      "Bash(then echo \"✅ Server ready with function export fix\")",
      "Bash(then echo \"✅ Server ready with built-in rate limiter\")",
      "Bash(ASTER_API_KEY=\"$ASTER_API_KEY\" ASTER_SECRET_KEY=\"$ASTER_SECRET_KEY\" node:*)",
      "Bash(ASTER_API_KEY=\"$ASTER_API_KEY\" ASTER_SECRET_KEY=\"$ASTER_SECRET_KEY\" timeout 10 node:*)",
      "Bash(PGPASSWORD=\"\" psql:*)",
      "Bash(timeout 5 node:*)",
      "Bash(then echo \"Port 5000 in use, killing...\")",
      "Bash(else echo '✅ Port 5000 is free')",
      "Bash(then echo \"✅ Server restarted and ready after $i seconds\")"
    ],
    "deny": [],
    "ask": []
  }
}
